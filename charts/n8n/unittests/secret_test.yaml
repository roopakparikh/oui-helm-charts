suite: test secret

templates:
  - secret.yaml

release:
  name: n8n
  namespace: n8n

chart:
  version: 1.0.0
  appVersion: 1.0.0

tests:
  - it: should create secret with postgres-password when db type is postgresdb and postgresql.enabled is false and externalPostgresql.existingSecret is not set
    set:
      db:
        type: postgresdb
      postgresql:
        enabled: false
      externalPostgresql:
        existingSecret: ""
        password: my-secret-password
    documentSelector:
      path: metadata.name
      value: n8n-postgresql
    asserts:
      - equal:
          path: data.postgres-password
          value: my-secret-password
          decodeBase64: true

  - it: should create secret with encryption-key when encryptionKey is set
    set:
      encryptionKey: my-secret-key
    documentSelector:
      path: metadata.name
      value: n8n-encryption-key-secret-v2
    asserts:
      - equal:
          path: data.N8N_ENCRYPTION_KEY
          value: my-secret-key
          decodeBase64: true

  - it: should create secret with redis username and password when worker.mode is queue and redis.enabled is false and externalRedis.existingSecret is not set
    set:
      worker:
        mode: queue
      redis:
        enabled: false
      externalRedis:
        existingSecret: ""
        username: my-redis-username
        password: my-redis-password
    documentSelector:
      path: metadata.name
      value: n8n-redis
    asserts:
      - equal:
          path: data.redis-username
          value: my-redis-username
          decodeBase64: true
      - equal:
          path: data.redis-password
          value: my-redis-password
          decodeBase64: true

  - it: should set default redis username when worker.mode is queue and redis.enabled is false and externalRedis.existingSecret is not set and externalRedis.username is not set
    set:
      worker:
        mode: queue
      redis:
        enabled: false
      externalRedis:
        existingSecret: ""
        username: ""
        password: my-redis-password
    documentSelector:
      path: metadata.name
      value: n8n-redis
    asserts:
      - equal:
          path: data.redis-username
          value: default
          decodeBase64: true

  - it: should set main node auth token when taskRunners.mode is external
    set:
      taskRunners:
        mode: external
        external:
          mainNodeAuthToken: my-main-node-auth-token
    documentSelector:
      path: metadata.name
      value: n8n-task-runners-secret
    asserts:
      - equal:
          path: data.auth-token
          value: my-main-node-auth-token
          decodeBase64: true

  - it: should set worker node auth token when taskRunners.mode is external
    set:
      taskRunners:
        mode: external
        external:
          workerNodeAuthToken: my-worker-node-auth-token
    documentSelector:
      path: metadata.name
      value: n8n-task-runners-secret
    asserts:
      - equal:
          path: data.worker-auth-token
          value: my-worker-node-auth-token
          decodeBase64: true

  - it: should match snapshot of default values
    set:
      encryptionKey: my-secret-key
      taskRunners:
        mode: internal
    asserts:
      - matchSnapshot: { }
