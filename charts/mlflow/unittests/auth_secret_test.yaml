suite: test authentication secret

templates:
  - auth_secret.yaml

tests:
  - it: should be empty when auth is not enabled
    set:
      auth.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should use sqlite on default when auth enabled
    set:
      auth.enabled: true
      auth.adminUsername: "admin"
      auth.adminPassword: "thisisnotasecret"
    release:
      name: mlflow
      namespace: mlflow
    chart:
      version: 1.0.0
      appVersion: 1.0.0
    asserts:
      - matchSnapshot: { }

  - it: should use different path for sqlite
    set:
      auth.enabled: true
      auth.adminUsername: "admin"
      auth.adminPassword: "thisisnotasecret"
      auth.sqliteFullPath: "/volumes/auth"
    release:
      name: mlflow
      namespace: mlflow
    chart:
      version: 1.0.0
      appVersion: 1.0.0
    asserts:
      - matchSnapshot: { }

  - it: should use slash only path for sqlite
    set:
      auth.enabled: true
      auth.adminUsername: "admin"
      auth.adminPassword: "thisisnotasecret"
      auth.sqliteFullPath: "/"
    release:
      name: mlflow
      namespace: mlflow
    chart:
      version: 1.0.0
      appVersion: 1.0.0
    asserts:
      - matchSnapshot: { }

  - it: should use postgres when auth enabled and postgres backend enabled
    set:
      auth.enabled: true
      auth.adminUsername: "admin"
      auth.adminPassword: "thisisnotasecret"
      auth.postgres.enabled: true
      auth.postgres.host: postgresdb
      auth.postgres.port: 1234
      auth.postgres.database: auth
      auth.postgres.user: authuser
      auth.postgres.password: authpassword
    release:
      name: mlflow
      namespace: mlflow
    chart:
      version: 1.0.0
      appVersion: 1.0.0
    asserts:
      - matchSnapshot: { }

  - it: should work with postgres driver
    set:
      auth.enabled: true
      auth.adminUsername: "admin"
      auth.adminPassword: "thisisnotasecret"
      auth.postgres.enabled: true
      auth.postgres.host: postgresdb
      auth.postgres.database: auth
      auth.postgres.user: authuser
      auth.postgres.password: authpassword
      auth.postgres.driver: psycopg2
    release:
      name: mlflow
      namespace: mlflow
    chart:
      version: 1.0.0
      appVersion: 1.0.0
    asserts:
      - matchSnapshot: { }

  - it: should require postgres user when postgres enabled
    set:
      auth.enabled: true
      auth.adminUsername: "admin"
      auth.adminPassword: "thisisnotasecret"
      auth.postgres.enabled: true
      auth.postgres.host: postgresdb
      auth.postgres.database: auth
      auth.postgres.password: authpassword
    asserts:
      - failedTemplate:
          errorMessage: "auth.postgres.user must be specified"

  - it: should require postgres passsword when postgres enabled
    set:
      auth.enabled: true
      auth.adminUsername: "admin"
      auth.adminPassword: "thisisnotasecret"
      auth.postgres.enabled: true
      auth.postgres.host: postgresdb
      auth.postgres.database: auth
      auth.postgres.user: authuser
    asserts:
      - failedTemplate:
          errorMessage: "auth.postgres.password must be specified"

  - it: should require postgres host when postgres enabled
    set:
      auth.enabled: true
      auth.adminUsername: "admin"
      auth.adminPassword: "thisisnotasecret"
      auth.postgres.enabled: true
      auth.postgres.database: auth
      auth.postgres.user: authuser
      auth.postgres.password: authpassword
    asserts:
      - failedTemplate:
          errorMessage: "auth.postgres.host must be specified"

  - it: should require postgres database when postgres enabled
    set:
      auth.enabled: true
      auth.adminUsername: "admin"
      auth.adminPassword: "thisisnotasecret"
      auth.postgres.enabled: true
      auth.postgres.host: postgresdb
      auth.postgres.user: authuser
      auth.postgres.password: authpassword
    asserts:
      - failedTemplate:
          errorMessage: "auth.postgres.database must be specified"

  - it: should require admin username
    set:
      auth.enabled: true
      auth.adminPassword: "thisisnotasecret"
    asserts:
      - failedTemplate:
          errorMessage: "auth.adminUsername must be specified"

  - it: should require admin password
    set:
      auth.enabled: true
      auth.adminUsername: "admin"
    asserts:
      - failedTemplate:
          errorMessage: "auth.adminPassword must be specified"

  - it: should require authorization function
    set:
      auth.enabled: true
      auth.adminUsername: "admin"
      auth.adminPassword: "thisisnotasecret"
      auth.authorizationFunction: ""
    asserts:
      - failedTemplate:
          errorMessage: "auth.authorizationFunction can not be empty!"

  - it: should be empty when ldap auth is not enabled
    set:
      ldapAuth.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should use ldap configurations when ldap auth enabled
    set:
      ldapAuth.enabled: true
      ldapAuth.uri: "ldap://lldap:3890/dc=mlflow,dc=test"
      ldapAuth.lookupBind: "uid=%s,ou=people,dc=mlflow,dc=test"
      ldapAuth.groupAttribute: "dn"
      ldapAuth.searchBaseDistinguishedName: "ou=groups,dc=mlflow,dc=test"
      ldapAuth.searchFilter: "(&(objectclass=groupOfUniqueNames)(uniquemember=%s))"
      ldapAuth.adminGroupDistinguishedName: "cn=test-admin,ou=groups,dc=mlflow,dc=test"
      ldapAuth.userGroupDistinguishedName: "cn=test-user,ou=groups,dc=mlflow,dc=test"
    release:
      name: mlflow
      namespace: mlflow
    chart:
      version: 1.0.0
      appVersion: 1.0.0
    asserts:
      - matchSnapshot: { }
